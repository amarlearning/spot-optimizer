name: Update Instance Metadata

on:
  schedule:
    - cron: '0 0 * * MON'  # Runs at 00:00 UTC every Monday
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-metadata:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        
      - name: Install dependencies
        run: |
          make install

      - name: Generate new metadata
        run: |
          echo "Running metadata generation..."
          poetry run python scripts/generate_instance_metadata.py
          echo "Metadata generation completed"
        
      - name: Check for changes
        id: check_changes
        run: |
          git add spot_optimizer/resources/instance_metadata.json
          if git diff --cached --quiet; then
            echo "No changes detected in metadata file"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in metadata file"
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff --cached --stat
          fi

      - name: Configure Git
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Get current version from pyproject.toml
          CURRENT_VERSION=$(poetry version -s)
          echo "Current version: $CURRENT_VERSION"
          # Bump patch version (not minor for metadata updates)
          poetry version patch
          # Get new version
          NEW_VERSION=$(poetry version -s)
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: |
            chore: update instance metadata and bump version to ${{ env.NEW_VERSION }}
            
            - Updates instance metadata from AWS EC2 page
            - Bumps package version to ${{ env.NEW_VERSION }}
          title: "chore: weekly instance metadata update"
          body: |
            ü§ñ Weekly Instance Metadata Update
            
            This PR:
            - Updates instance metadata from AWS EC2 page
            - Bumps package version to ${{ env.NEW_VERSION }}
            
            ### Changes Summary
            The instance metadata has been updated with the latest information from AWS.
            
            Please review the changes in `instance_metadata.json` to ensure the data looks correct.
          branch: metadata-update
          base: main
          labels: |
            automated
            metadata-update

      - name: Output summary
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "‚úÖ Metadata update PR created successfully"
          echo "Version bumped to: ${{ env.NEW_VERSION }}"
          echo "Once merged, this will trigger the publish workflow"
          
      - name: No changes summary
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "‚ÑπÔ∏è No changes detected in instance metadata"
          echo "Skipping version bump and PR creation"